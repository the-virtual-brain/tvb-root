apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '5'
    field.cattle.io/publicEndpoints: 'null'
  creationTimestamp: '2024-03-14T09:28:53Z'
  generation: 87
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-${NAMESPACE}-pod-db
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/publicEndpoints: {}
          f:labels:
            .: {}
            f:workload.user.cattle.io/workloadselector: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:workload.user.cattle.io/workloadselector: {}
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"pg-bouncer"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"AUTH_FILE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_HOST"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_PORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"DB_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5432,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/bouncer/pgbouncer.ini"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                    k:{"mountPath":"/etc/bouncer/userlist.txt"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:subPath: {}
                k:{"name":"tvb-postgres"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"PGPORT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_DATABASE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"POSTGRESQL_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":5431,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/lib/pgsql/data "}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"pg-bouncer-auth"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"pg-bouncer-ini"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tvb-db"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: agent
      operation: Update
      time: '2024-03-27T13:57:15Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-03-27T13:57:32Z'
  name: pod-db
  namespace: ${NAMESPACE}
  resourceVersion:
  uid: 04e42e61-d3f6-478c-ac8b-b8ce847b16c0
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-${NAMESPACE}-pod-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-${NAMESPACE}-pod-db
      namespace: ${NAMESPACE}
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              value: tvb_db_user
            - name: POSTGRESQL_PASSWORD
              value: sCumlRVB3fd0oL3
            - name: POSTGRESQL_DATABASE
              value: tvb_hbp_database
            - name: PGPORT
              value: '5431'
          image: centos/postgresql-13-centos7
          imagePullPolicy: IfNotPresent
          name: tvb-postgres
          ports:
            - containerPort: 5431
              name: 5431tcp
              protocol: TCP
          resources:
            limits:
              cpu: '4'
              memory: 4Gi
            requests:
              cpu: '2'
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: '/var/lib/pgsql/data '
              name: tvb-db
        - env:
            - name: DB_USER
              value: tvb_db_user
            - name: DB_PASSWORD
              value: sCumlRVB3fd0oL3
            - name: DB_NAME
              value: tvb_hbp_database
            - name: DB_HOST
              value: 127.0.0.1
            - name: AUTH_FILE
              value: /etc/bouncer/userlist.txt
            - name: DB_PORT
              value: '5431'
          image: docker-registry.ebrains.eu/tvb/pgbouncer:latest
          imagePullPolicy: IfNotPresent
          name: pg-bouncer
          ports:
            - containerPort: 5432
              name: 5432tcp
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: '1'
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/bouncer/userlist.txt
              name: pg-bouncer-auth
              subPath: file
            - mountPath: /etc/bouncer/pgbouncer.ini
              name: pg-bouncer-ini
              subPath: file
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: tvb-db
          persistentVolumeClaim:
            claimName: tvb-db
        - configMap:
            defaultMode: 420
            name: pg-bouncer-auth
          name: pg-bouncer-auth
        - configMap:
            defaultMode: 420
            name: pg-bouncer-ini
          name: pg-bouncer-ini
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-03-14T09:28:53Z'
      lastUpdateTime: '2024-03-20T12:39:56Z'
      message: ReplicaSet "pod-db" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2024-03-27T13:57:32Z'
      lastUpdateTime: '2024-03-27T13:57:32Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 87
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
