FROM continuumio/miniconda3

ARG USER_HOME=/home
ARG TVB_STORAGE=$USER_HOME/TVB_STORAGE
ARG KEYCLOAK_CONFIG=$USER_HOME/keycloak_config
ARG JUPYTER_CONFIG=$USER_HOME/.jupyter
ARG ENV_BIN=/opt/conda/envs/tvb-run/bin
ARG PIP=$ENV_BIN/pip

WORKDIR $USER_HOME

RUN apt-get -y update && apt-get -y install build-essential gcc rsync
RUN apt-get -y update && apt-get -y install texlive-base texlive-formats-extra
RUN apt-get -y update && apt-get -y install postgresql

USER postgres
RUN service postgresql start && createdb -O postgres tvb-test && psql --command "ALTER USER postgres WITH PASSWORD 'postgres';"

USER root
RUN conda update -n base -c defaults conda; conda init bash
RUN conda create -y --name tvb-run python=3.10 nomkl numba scipy numpy cython psycopg2
RUN conda install -y --name tvb-run -c conda-forge jupyterlab tvb-gdist
RUN $PIP install --upgrade pip
RUN $PIP install lockfile scikit-build
RUN $PIP install syncrypto

# Jupyther notebook configurations: set password
# tvb42
RUN mkdir $JUPYTER_CONFIG
RUN /bin/bash -c "source activate tvb-run"; \
    $ENV_BIN/jupyter notebook --generate-config; \
    echo "c.NotebookApp.password='sha1:12bff019c253:9daecd92c2e9bdb10b3b8a06767a74a0fe078d7c'">>$JUPYTER_CONFIG/jupyter_notebook_config.py

RUN wget https://zenodo.org/record/7574266/files/tvb_data.zip?download=1 -O tvb_data.zip; \
    mkdir tvb_data; unzip tvb_data.zip -d tvb_data; rm tvb_data.zip; \
    cd tvb_data; \
    $ENV_BIN/python setup.py develop

WORKDIR $USER_HOME
COPY requirements_group requirements.txt
RUN $PIP install -r requirements.txt

# make sure a copy of tvb-root exists inside, for users without Github clone
RUN git clone --depth 1 https://github.com/the-virtual-brain/tvb-root.git
ARG LAST_SHA=LATEST

RUN cd tvb-root; \
    git pull; \
    cd tvb_build; \
    $PIP install -r docker/requirements_group; \
    cd ../tvb_framework; \
    $PIP install -e . --no-deps; \
    cd ../tvb_storage; \
    $PIP install -e . --no-deps; \
    cd ../tvb_library; \
    $PIP install -e .; \
    cd ../tvb_bin; \
    $PIP install -e .

WORKDIR $USER_HOME
COPY .tvb.configuration $USER_HOME/.tvb.configuration
#COPY --chown=$TVB_USER:$TVB_USER .tvb.landing.page.configuration $USER_HOME/.tvb.landing.page.configuration
COPY step1/_help $USER_HOME/tvb-root/tvb_framework/tvb/interfaces/web/static/help

RUN mkdir $USER_HOME/.tvb-temp; mkdir $USER_HOME/.tvb-temp/logs; mkdir $TVB_STORAGE $KEYCLOAK_CONFIG

ENV TVB_USER_HOME $USER_HOME
RUN chmod -R g+rwX $USER_HOME

WORKDIR $USER_HOME/tvb-root
# MOUNT -v [local- tvb-root - clone]:$USER_HOME/tvb-root

# For running all unit-tests inspect output in local tvb-root/tvb_bin/TEST_OUTPUT folder
#CMD ["bash","-c","source activate tvb-run && cd tvb_build && bash install_full_tvb.sh && cd ../tvb_bin && service postgresql start && bash run_tests.sh postgres"]
#CMD ["bash","-c","source activate tvb-run && cd tvb_build && bash install_full_tvb.sh && cd ../tvb_bin && bash run_tests.sh"]
#CMD ["bash","-c","source activate tvb-run && /bin/bash"]

# For running Jupyter notebooks
# bind port 8888:8888
#CMD ["bash","-c","source activate tvb-run && cd tvb_documentation && jupyter notebook --ip 0.0.0.0 --no-browser --allow-root"]

# For running TVB Web GUI
# bind port 8080
# MOUNT -v [local- ~/TVB ]:$TVB_STORAGE
#CMD ["bash","-c","source activate tvb-run && python -m tvb.interfaces.web.run_landing_page"]

ENV NUMBA_CACHE_DIR /home/TVB_STORAGE/numba_cache

USER 1001
CMD ["bash","-c","source activate tvb-run && cd tvb_bin && python -m tvb.interfaces.web.run WEB_PROFILE"]
