FROM continuumio/miniconda3

ARG TVB_USER=tvb_user
ARG USER_HOME=/home/$TVB_USER
ARG TVB_STORAGE=$USER_HOME/TVB_STORAGE
ARG KEYCLOAK_CONFIG=$USER_HOME/keycloak_config
ARG JUPYTER_CONFIG=$USER_HOME/.jupyter

RUN useradd -ms /bin/bash $TVB_USER
WORKDIR $USER_HOME

RUN apt-get -y update && apt-get -y install build-essential gcc
RUN apt-get -y update && apt-get -y install texlive-base texlive-formats-extra
RUN apt-get -y update && apt-get -y install octave postgresql

USER postgres
RUN service postgresql start && createdb -O postgres tvb-test && psql --command "ALTER USER postgres WITH PASSWORD 'postgres';"

USER root
RUN conda update -n base -c defaults conda; conda init bash
RUN conda create -y --name tvb-run python=3.10 nomkl numba scipy numpy cython psycopg2
RUN conda install -y --name tvb-run -c conda-forge jupyterlab tvb-gdist
RUN /opt/conda/envs/tvb-run/bin/pip install --upgrade pip
RUN /opt/conda/envs/tvb-run/bin/pip install lockfile scikit-build
RUN /opt/conda/envs/tvb-run/bin/pip install syncrypto

RUN conda create -y --name tvb-docs python=3.10 nomkl numba scipy numpy cython psycopg2
RUN conda install -y --name tvb-docs -c conda-forge jupyterlab tvb-gdist
RUN /opt/conda/envs/tvb-docs/bin/pip install --upgrade pip
RUN /opt/conda/envs/tvb-docs/bin/pip install lockfile scikit-build
RUN /opt/conda/envs/tvb-docs/bin/pip install syncrypto
RUN /opt/conda/envs/tvb-docs/bin/pip install sphinx docutils

# Jupyther notebook configurations: set password
# tvb42
RUN mkdir $JUPYTER_CONFIG
RUN /bin/bash -c "source activate tvb-run"; \
    /opt/conda/envs/tvb-run/bin/jupyter notebook --generate-config; \
    echo "c.NotebookApp.password='sha1:12bff019c253:9daecd92c2e9bdb10b3b8a06767a74a0fe078d7c'">>$JUPYTER_CONFIG/jupyter_notebook_config.py

RUN wget https://zenodo.org/record/4263723/files/tvb_data.zip?download=1 -O tvb_data.zip; \
    mkdir tvb_data; unzip tvb_data.zip -d tvb_data; rm tvb_data.zip; \
    cd tvb_data; \
     /opt/conda/envs/tvb-run/bin/python setup.py develop;\
     /opt/conda/envs/tvb-docs/bin/python setup.py develop

WORKDIR $USER_HOME
COPY requirements_group requirements.txt
RUN  /opt/conda/envs/tvb-run/bin/pip install -r requirements.txt
RUN  /opt/conda/envs/tvb-docs/bin/pip install -r requirements.txt
RUN chown $TVB_USER:$TVB_USER $USER_HOME

USER $TVB_USER
# make sure a copy of tvb-root exists inside, for users without Github clone
RUN git clone --depth 1 https://github.com/the-virtual-brain/tvb-root.git
ARG LAST_SHA=LATEST
RUN cd tvb-root; \
    git pull; \
    cd tvb_build; \
    /opt/conda/envs/tvb-run/bin/pip install -r docker/requirements_group;\
    /opt/conda/envs/tvb-docs/bin/pip install -r docker/requirements_group;\
    /bin/bash -c "source activate tvb-run && /bin/bash install_full_tvb.sh";\
    /bin/bash -c "source activate tvb-docs && /bin/bash install_full_tvb.sh"

COPY --chown=$TVB_USER:$TVB_USER .tvb.configuration $USER_HOME/.tvb.configuration
RUN mkdir $USER_HOME/.tvb-temp; mkdir $USER_HOME/.tvb-temp/logs; mkdir -m777 $TVB_STORAGE $KEYCLOAK_CONFIG
ENV TVB_USER_HOME $USER_HOME
WORKDIR $USER_HOME/tvb-root

#RUN rm /opt/conda/envs/tvb-run/share/jupyter/kernels/python3/kernel.json
#RUN echo '{"argv": ["python", "-m", "ipykernel_launcher", "-f", "{connection_file}"], "display_name": "Python 3", "language": "python"}' >> /opt/conda/envs/tvb-run/share/jupyter/kernels/python3/kernel.json

# MOUNT -v [local- tvb-root - clone]:$USER_HOME/tvb-root

# For building static help for web
CMD ["bash","-c","source activate tvb-docs && cd tvb_build && python build_step1.py"]

# For building the Pypi packages
#CMD ["bash","-c","source activate tvb-run && cd tvb_build && bash package_for_pip.sh"]

# For running all unit-tests
# inspect output in local tvb-root/tvb_bin/TEST_OUTPUT folder
#CMD ["bash","-c","source activate tvb-run && cd tvb_bin && service postgresql start && bash run_tests.sh postgres"]

# For running Jupyter notebooks
# bind port 8888:8888
#CMD ["bash","-c","source activate tvb-run && cd tvb_documentation && jupyter notebook --ip 0.0.0.0 --no-browser --allow-root"]

# For running TVB Web GUI
# bind port 8080
# MOUNT -v [local- ~/TVB ]:$TVB_STORAGE

#CMD ["bash","-c","source activate tvb-run && /bin/bash"]